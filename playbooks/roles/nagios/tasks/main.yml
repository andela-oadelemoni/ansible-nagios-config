- name: Create nagcmd group
  group: name=nagcmd state=present
  tags:
    - provision

- name: Create nagios user and add to the nagcmd group
  user: name=nagios state=present groups=nagcmd append=yes
  tags:
    - provision

- name: Install required packages needed to run nagios
  apt: name="{{ item }}" state=latest
  with_items:
    - build-essential
    - libgd2-xpm-dev
    - openssl
    - libssl-dev
    - xinetd
    - apache2-utils
    - unzip
  tags:
    - provision

######### NAGIOS CORE ############
- name: Download and Extract nagios core file
  unarchive: src=https://assets.nagios.com/downloads/nagioscore/releases/{{ nagios }}.tar.gz dest={{ ansible_env.PWD }} copy=no
  tags:
    - nagios_core

- name: Run nagios installation in the nagios directory
  command: "{{ item }}"
  with_items:
    - ./configure --with-nagios-group=nagios --with-command-group=nagcmd
    - make clean
    - make all
    - make install
    - make install-commandmode
    - make install-init
    - make install-config
    - /usr/bin/install -c -m 644 sample-config/httpd.conf /etc/apache2/sites-available/nagios.conf
  args:
    chdir: "{{ ansible_env.PWD}}/{{ nagios }}"
  tags:
    - nagios_core

- name: Add web server user to nagcmd group
  user: name=www-data groups=nagcmd append=yes
  tags:
    - nagios_core

######### NAGIOS PLUGIN ############
- name: Download and Extract Nagios Plugin
  unarchive: src=http://nagios-plugins.org/download/{{ nagios_plugin }}.tar.gz dest={{ ansible_env.PWD }} copy=no
  tags:
    - nagios_plugin

- name: Run nagios plugin in the nagios plugin directory
  command: "{{ item }}"
  with_items:
    - ./configure --with-nagios-user=nagios --with-nagios-group=nagios --with-openssl
    - make
    - make install
  args:
    chdir: "{{ ansible_env.PWD }}/{{ nagios_plugin }}"
  tags:
    - nagios_plugin

######### NRPE ############
- name: Download and Extract NRPE
  unarchive: src=http://downloads.sourceforge.net/project/nagios/nrpe-2.x/{{ nrpe }}/{{ nrpe }}.tar.gz dest={{ ansible_env.PWD }} copy=no
  tags:
    - nrpe

- name: Run nagios plugin in the nagios plugin directory
  command: "{{ item }}"
  with_items:
    - ./configure --enable-command-args --with-nagios-user=nagios --with-nagios-group=nagios --with-ssl=/usr/bin/openssl --with-ssl-lib=/usr/lib/x86_64-linux-gnu
    - make clean
    - make all
    - make install
    - make install-xinetd
    - make install-daemon-config
  args:
    chdir: "{{ ansible_env.PWD }}/{{ nrpe }}"
  tags:
    - nrpe

- name: Get Private IP address
  raw: "ifconfig | grep 'inet addr' | sed 's/inet addr://g' | head -n1 | awk '{print $1}'"
  register: ip_address
  tags:
    - nrpe

- debug: msg={{ ip_address }}

- name: Add IP address of server to be monitored
  template: src=nrpe.j2 dest=/etc/xinetd.d/nrpe mode=0644
  tags:
    - nrpe

- name: Restart xinetd and NRPE
  service: name=xinetd state=restarted
  tags:
    - nrpe

######### CONFIGURE NAGIOS ############
- name: Expose servers directory in nagios config
  blockinfile:
    dest: /usr/local/nagios/etc/nagios.cfg
    marker: "#{mark} SERVERS BLOCK CONFIGURATION"
    insertafter: "#cfg_dir=/usr/local/nagios/etc/servers"
    block: "cfg_dir=/usr/local/nagios/etc/servers"
  tags:
    - nagios_configure

- name: Create servers directory to contain server to be monitored
  file: path=/usr/local/nagios/etc/servers state=directory mode=0644
  tags:
    - nagios_configure

- name: Configure Nagios Contacts
  lineinfile: dest=/usr/local/nagios/etc/objects/contacts.cfg regexp='email' line='email {{ email }}' state=present
  tags:
    - nagios_configure

######### CONFIGURE CHECK_NRPE ############
- name: Add CHECK_NRPE command
  blockinfile:
    dest: /usr/local/nagios/etc/objects/commands.cfg
    marker: "#{mark} NRPE COMMAND CONFIGURATION"
    block: |
      define command{
              command_name check_nrpe
              command_line $USER1$/check_nrpe -H $HOSTADDRESS$ -c $ARG1$
      }
  tags:
    - nagios_configure

######### CONFIGURE APACHE REWRITE AND CGI MODULES ############
- name: Configure Apache rewrite and CGI module
  command: "{{ item }}"
  with_items:
    - a2enmod rewrite
    - a2enmod cgi
  tags:
    - apache_configure

- name: Create nagios admin user and password
  htpasswd: path=/usr/local/nagios/etc/htpasswd.users name=nagiosadmin password={{ nagios_password }}
  tags:
    - apache_configure

- name: Create symbolic link of nagios.conf to sites-enabled directory and allow nagios to start automatically
  file: src={{ item.src }} dest={{ item.dest }} state=link force=yes
  with_items:
   - { src: '/etc/apache2/sites-available/nagios.conf', dest: '/etc/apache2/sites-enabled/nagios.conf' }
   - { src: '/etc/init.d/nagios', dest: '/etc/rcS.d/S99nagios' }
  tags:
   - apache_configure

- name: Restart all services
  service: name={{ item }} state=restarted
  with_items:
    - nagios
    - apache2
  tags:
    - apache_configure

