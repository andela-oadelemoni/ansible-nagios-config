- name: Create nagcmd group
  group: name=nagcmd state=present
  tags:
    - provision

- name: Create nagios user and add to the nagcmd group
  user: name=nagios state=present groups=nagcmd append=yes
  tags:
    - provision

- name: Install required packages needed to run nagios
  apt: name="{{ item }}" state=latest
  with_items:
    - build-essential
    - libgd2-xpm-dev
    - openssl
    - libssl-dev
    - xinetd
    - apache2-utils
    - unzip
  tags:
    - provision

######### NAGIOS CORE ############

- include: nagios_core.yml

######### NAGIOS PLUGIN ############

- include: nagios_plugin.yml

######### NRPE ############

- include: nrpe.yml

######### CONFIGURE NAGIOS ############
- name: Expose servers directory in nagios config
  blockinfile:
    dest: /usr/local/nagios/etc/nagios.cfg
    marker: "#{mark} SERVERS BLOCK CONFIGURATION"
    insertafter: "#cfg_dir=/usr/local/nagios/etc/servers"
    block: "cfg_dir=/usr/local/nagios/etc/servers"
  tags:
    - nagios_configure

- name: Create servers directory to contain server to be monitored
  file: path=/usr/local/nagios/etc/servers state=directory mode=0644
  tags:
    - nagios_configure

- name: Configure Nagios Contacts
  lineinfile: dest=/usr/local/nagios/etc/objects/contacts.cfg regexp='email' line='email {{ email }}' state=present
  tags:
    - nagios_configure

######### CONFIGURE CHECK_NRPE ############
- name: Add CHECK_NRPE command
  blockinfile:
    dest: /usr/local/nagios/etc/objects/commands.cfg
    marker: "#{mark} NRPE COMMAND CONFIGURATION"
    block: |
      define command{
              command_name check_nrpe
              command_line $USER1$/check_nrpe -H $HOSTADDRESS$ -c $ARG1$
      }
  tags:
    - nagios_configure

######### CONFIGURE APACHE REWRITE AND CGI MODULES ############
- name: Check if required apache modules are enabled
  command: bash -c "apachectl -M | grep rewrite_module"
  register: rewrite_enabled
  ignore_errors: True
  tags:
    - apache_configure

- name: Check if required apache modules are enabled
  command: bash -c "apachectl -M | grep cgi_module"
  register: cgi_enabled
  ignore_errors: True
  tags:
    - apache_configure

- name: Enagle Apache rewrite module
  command: bash -c "a2enmod rewrite"
  when: rewrite_enabled|failed
  tags:
    - apache_configure

- name: Enable Apache CGI module
  command: bash -c "a2enmod cgi"
  when: cgi_enabled|failed
  tags:
    - apache_configure

- name: Create nagios admin user and password
  htpasswd: path=/usr/local/nagios/etc/htpasswd.users name=nagiosadmin password={{ nagios_password }}
  tags:
    - apache_configure

- name: Create symbolic link of nagios.conf to sites-enabled directory and allow nagios to start automatically
  file: src={{ item.src }} dest={{ item.dest }} state=link force=yes
  with_items:
   - { src: '/etc/apache2/sites-available/nagios.conf', dest: '/etc/apache2/sites-enabled/nagios.conf' }
   - { src: '/etc/init.d/nagios', dest: '/etc/rcS.d/S99nagios' }
  tags:
   - apache_configure

- name: Restart all services
  service: name={{ item }} state=restarted
  with_items:
    - nagios
    - apache2
  tags:
    - apache_configure

